openapi: 3.0.3
info:
  title: NDR Korelasyon Motoru API - Alerts
  description: API endpoints for alerts management
  version: 1.0.0
paths:
  /alerts:
    get:
      summary: Get all alerts
      description: Retrieves a paginated list of alerts with optional filters
      tags:
        - Alerts
      parameters:
        - name: severity
          in: query
          description: Filter by severity
          schema:
            type: array
            items:
              type: string
              enum: [critical, high, medium, low, info]
        - name: status
          in: query
          description: Filter by status
          schema:
            type: array
            items:
              type: string
              enum: [open, in_progress, resolved, closed, false_positive]
        - name: source
          in: query
          description: Filter by source
          schema:
            type: array
            items:
              type: string
        - name: type
          in: query
          description: Filter by type
          schema:
            type: array
            items:
              type: string
        - name: entityId
          in: query
          description: Filter by entity ID
          schema:
            type: string
        - name: startDate
          in: query
          description: Filter by start date (ISO format)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter by end date (ISO format)
          schema:
            type: string
            format: date-time
        - name: search
          in: query
          description: Text search in title and description
          schema:
            type: string
        - name: page
          in: query
          description: Page number (1-based)
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Items per page
          schema:
            type: integer
            default: 50
        - name: sort
          in: query
          description: Field to sort by
          schema:
            type: string
            default: timestamp
        - name: order
          in: query
          description: Sort order
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: List of alerts
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Alert'
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      summary: Create new alert
      description: Creates a new alert
      tags:
        - Alerts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertDto'
      responses:
        '201':
          description: Alert created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /alerts/{id}:
    get:
      summary: Get alert by ID
      description: Retrieves an alert by its ID
      tags:
        - Alerts
      parameters:
        - name: id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      responses:
        '200':
          description: Alert details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '401':
          description: Unauthorized
        '404':
          description: Alert not found
        '500':
          description: Internal server error
    patch:
      summary: Update alert
      description: Updates an existing alert
      tags:
        - Alerts
      parameters:
        - name: id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlertDto'
      responses:
        '200':
          description: Alert updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Alert not found
        '500':
          description: Internal server error
    delete:
      summary: Delete alert
      description: Deletes an alert
      tags:
        - Alerts
      parameters:
        - name: id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      responses:
        '204':
          description: Alert deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Alert not found
        '500':
          description: Internal server error
  /alerts/{id}/status:
    patch:
      summary: Update alert status
      description: Updates the status of an alert
      tags:
        - Alerts
      parameters:
        - name: id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [open, in_progress, resolved, closed, false_positive]
              required:
                - status
      responses:
        '200':
          description: Alert status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Alert not found
        '500':
          description: Internal server error
  /alerts/{id}/comments:
    get:
      summary: Get alert comments
      description: Retrieves comments for an alert
      tags:
        - Alerts
      parameters:
        - name: id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '401':
          description: Unauthorized
        '404':
          description: Alert not found
        '500':
          description: Internal server error
    post:
      summary: Add comment to alert
      description: Adds a new comment to an alert
      tags:
        - Alerts
      parameters:
        - name: id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        '201':
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Alert not found
        '500':
          description: Internal server error
  /alerts/statistics:
    get:
      summary: Get alert statistics
      description: Retrieves statistics about alerts
      tags:
        - Alerts
      parameters:
        - name: startDate
          in: query
          description: Filter by start date (ISO format)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter by end date (ISO format)
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Alert statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  bySeverity:
                    type: object
                    additionalProperties:
                      type: integer
                  byStatus:
                    type: object
                    additionalProperties:
                      type: integer
                  bySource:
                    type: object
                    additionalProperties:
                      type: integer
                  byTime:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                        count:
                          type: integer
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
components:
  schemas:
    Alert:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, high, medium, low, info]
        status:
          type: string
          enum: [open, in_progress, resolved, closed, false_positive]
        source:
          type: string
        type:
          type: string
        entityId:
          type: string
        eventIds:
          type: array
          items:
            type: string
        timestamp:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        closedAt:
          type: string
          format: date-time
        closedBy:
          type: string
        assignedTo:
          type: string
        tactic:
          type: string
        technique:
          type: string
        payload:
          type: object
    CreateAlertDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, high, medium, low, info]
        status:
          type: string
          enum: [open, in_progress, resolved, closed, false_positive]
          default: open
        source:
          type: string
        type:
          type: string
        entityId:
          type: string
        eventIds:
          type: array
          items:
            type: string
        timestamp:
          type: string
          format: date-time
        assignedTo:
          type: string
        tactic:
          type: string
        technique:
          type: string
        payload:
          type: object
      required:
        - title
        - severity
        - source
    UpdateAlertDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, high, medium, low, info]
        status:
          type: string
          enum: [open, in_progress, resolved, closed, false_positive]
        assignedTo:
          type: string
        tactic:
          type: string
        technique:
          type: string
    Comment:
      type: object
      properties:
        id:
          type: string
        alertId:
          type: string
        content:
          type: string
        userId:
          type: string
        username:
          type: string
        timestamp:
          type: string
          format: date-time