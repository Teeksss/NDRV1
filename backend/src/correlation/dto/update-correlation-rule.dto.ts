import { ApiPropertyOptional } from '@nestjs/swagger';
import { IsString, IsArray, IsBoolean, IsOptional, IsNumber, IsObject, ValidateNested } from 'class-validator';
import { Type } from 'class-transformer';
import { ConditionDto, ActionParameterDto, SequenceStageDto, AggregationDto } from './create-correlation-rule.dto';

export class UpdateCorrelationRuleDto {
  @ApiPropertyOptional({ description: 'Name of the correlation rule', example: 'Updated Rule Name' })
  @IsString()
  @IsOptional()
  name?: string;

  @ApiPropertyOptional({ description: 'Description of the rule', example: 'Updated description' })
  @IsString()
  @IsOptional()
  description?: string;

  @ApiPropertyOptional({ 
    description: 'Type of correlation rule',
    example: 'threshold',
    enum: ['simple', 'threshold', 'sequence', 'aggregation', 'pattern', 'behavioral']
  })
  @IsString()
  @IsOptional()
  type?: string;

  @ApiPropertyOptional({ 
    description: 'Whether the rule is enabled',
    example: true
  })
  @IsBoolean()
  @IsOptional()
  enabled?: boolean;

  @ApiPropertyOptional({ 
    description: 'Event types this rule applies to',
    type: [String],
    example: ['authentication_failure', 'access_denied'] 
  })
  @IsArray()
  @IsString({ each: true })
  @IsOptional()
  eventTypes?: string[];

  @ApiPropertyOptional({ 
    description: 'Severity of alerts generated by this rule',
    example: 'high',
    enum: ['critical', 'high', 'medium', 'low', 'info']
  })
  @IsString()
  @IsOptional()
  severity?: string;

  @ApiPropertyOptional({ 
    description: 'Category of the rule',
    example: 'authentication' 
  })
  @IsString()
  @IsOptional()
  category?: string;

  @ApiPropertyOptional({ 
    description: 'Conditions for rule matching',
    type: [ConditionDto]
  })
  @IsArray()
  @IsOptional()
  @ValidateNested({ each: true })
  @Type(() => ConditionDto)
  conditions?: ConditionDto[];

  @ApiPropertyOptional({ 
    description: 'Actions to perform when rule matches',
    type: [ActionParameterDto]
  })
  @IsArray()
  @IsOptional()
  @ValidateNested({ each: true })
  @Type(() => ActionParameterDto)
  actions?: ActionParameterDto[];

  @ApiPropertyOptional({ 
    description: 'Time window in seconds for correlation',
    example: 3600
  })
  @IsNumber()
  @IsOptional()
  timeWindow?: number;

  @ApiPropertyOptional({ 
    description: 'Threshold count for threshold rules',
    example: 5
  })
  @IsNumber()
  @IsOptional()
  threshold?: number;

  @ApiPropertyOptional({ 
    description: 'Sequence stages for sequence rules',
    type: [SequenceStageDto]
  })
  @IsArray()
  @IsOptional()
  @ValidateNested({ each: true })
  @Type(() => SequenceStageDto)
  sequence?: SequenceStageDto[];

  @ApiPropertyOptional({ 
    description: 'Aggregations for aggregation rules',
    type: [AggregationDto]
  })
  @IsArray()
  @IsOptional()
  @ValidateNested({ each: true })
  @Type(() => AggregationDto)
  aggregations?: AggregationDto[];

  @ApiPropertyOptional({ 
    description: 'Pattern configuration for pattern rules',
    type: Object
  })
  @IsObject()
  @IsOptional()
  pattern?: Record<string, any>;

  @ApiPropertyOptional({ 
    description: 'Tags for categorizing the rule',
    type: [String],
    example: ['authentication', 'brute-force']
  })
  @IsArray()
  @IsString({ each: true })
  @IsOptional()
  tags?: string[];

  @ApiPropertyOptional({ 
    description: 'MITRE ATT&CK tactic',
    example: 'TA0001'
  })
  @IsString()
  @IsOptional()
  tactic?: string;

  @ApiPropertyOptional({ 
    description: 'MITRE ATT&CK technique',
    example: 'T1110'
  })
  @IsString()
  @IsOptional()
  technique?: string;

  @ApiPropertyOptional({ 
    description: 'Additional metadata',
    type: Object
  })
  @IsObject()
  @IsOptional()
  metadata?: Record<string, any>;
}